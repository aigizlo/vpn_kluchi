from logs.logger import logger

from aiogram.dispatcher import FSMContext
from config import dp, bot_name, support
from keyboards.keyboards import *
from states import MyStates

from user_data import UserData, check_user_in_system

from text import ref_link


# –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞"
@dp.message_handler(lambda message: message.text == 'üíµ–ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞', state="*")
async def process_partners_command(message: types.Message, state: FSMContext):
    if not check_user_in_system(message.from_user.id):
        await message.answer("–ß—Ç–æ –±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start")
        return
    # —Å–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
    user_data = UserData()
    cur_state = await state.get_state()
    keyboard = back_and_withdraw()

    telegram_id = message.from_user.id
    try:
        user_id = user_data.get_user_id(telegram_id)

        referral_balance = user_data.get_user_balance_bonus(user_id)

        count_ref = user_data.count_referrals(user_id)

        text = ref_link(user_id, bot_name, count_ref, referral_balance)
        # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π —Å —á–µ—Ç—ã—Ä—å–º—è –∫–Ω–æ–ø–∫–∞–º–∏
        await message.answer(text, parse_mode='HTML', disable_web_page_preview=True, reply_markup=keyboard)
        await state.set_state(MyStates.state_promo_my)
        logger.info(f"BUTTON: –ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞, user - {telegram_id}, state - {cur_state}")

    except Exception as e:
        logger.error(f"BUTTON_ERROR: –ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞, user - {telegram_id}, –æ—à–∏–±–∫–∞ - {e}")


@dp.message_handler(lambda message: message.text == '–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤', state=MyStates.state_promo_my)
async def bonus_balance(message: types.Message):
    keyboard = back_button()
    user_data = UserData()
    telegram_id = message.from_user.id
    try:

        user_id = user_data.get_user_id(telegram_id)
        balance = user_data.get_user_balance_bonus(user_id)

        answer = f"–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ —Ä—É—á–Ω–æ–º —Ä–µ–∂–∏–º–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É {support}"

        if balance < 500:
            answer = f"–í–∞—à –±–∞–ª–∞–Ω—Å: {balance} —Ä—É–±–ª–µ–π\n–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ –¥–æ—Å—Ç—É–ø–µ–Ω –æ—Ç 500 —Ä—É–±–ª–µ–π"

        await message.answer(answer, reply_markup=keyboard)

    except Exception as e:
        logger.error(f"BUTTON_ERROR: –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ '–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤', –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {telegram_id}, –æ—à–∏–±–∫–∞ - {e}")
